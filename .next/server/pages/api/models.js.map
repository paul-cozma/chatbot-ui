{"version":3,"file":"pages/api/models.js","mappings":"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","sources":["webpack://_N_E/?b4d0","webpack://_N_E/./types/openai.ts","webpack://_N_E/./pages/api/models.ts","webpack://_N_E/./utils/app/const.ts","webpack://_N_E/./node_modules/next/dist/compiled/@edge-runtime/cookies/index.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/error.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/utils.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/fetch-event.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/i18n/detect-domain-locale.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/remove-trailing-slash.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/parse-path.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/add-path-prefix.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/add-path-suffix.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/path-has-prefix.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/add-locale.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/format-next-pathname-info.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/get-hostname.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/i18n/normalize-locale-path.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/remove-path-prefix.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/get-next-pathname-info.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/next-url.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/cookies.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/request.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/response.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/relativize-url.js","webpack://_N_E/./node_modules/next/dist/esm/server/internal-utils.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/app-paths.js","webpack://_N_E/./node_modules/next/dist/esm/client/components/app-router-headers.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/adapter.js","webpack://_N_E/<anon>"],"sourcesContent":["\n        import { adapter, enhanceGlobals } from 'next/dist/esm/server/web/adapter'\n\n        enhanceGlobals()\n\n        var mod = require(\"private-next-pages/api/models.ts\")\n        var handler = mod.middleware || mod.default;\n\n        if (typeof handler !== 'function') {\n          throw new Error('The Edge Function \"pages/api/models\" must export a `default` function');\n        }\n\n        export default function (opts) {\n          return adapter({\n              ...opts,\n              page: \"/api/models\",\n              handler,\n          })\n        }\n    ","export interface OpenAIModel {\n  id: string;\n  name: string;\n  maxLength: number; // maximum length of a message\n  tokenLimit: number;\n}\n\nexport enum OpenAIModelID {\n  GPT_3_5 = 'gpt-3.5-turbo',\n  GPT_4 = 'gpt-4',\n}\n\n// in case the `DEFAULT_MODEL` environment variable is not set or set to an unsupported model\nexport const fallbackModelID = OpenAIModelID.GPT_3_5;\n\nexport const OpenAIModels: Record<OpenAIModelID, OpenAIModel> = {\n  [OpenAIModelID.GPT_3_5]: {\n    id: OpenAIModelID.GPT_3_5,\n    name: 'GPT-3.5',\n    maxLength: 12000,\n    tokenLimit: 3000,\n  },\n  [OpenAIModelID.GPT_4]: {\n    id: OpenAIModelID.GPT_4,\n    name: 'GPT-4',\n    maxLength: 24000,\n    tokenLimit: 6000,\n  },\n};\n","import { OpenAIModel, OpenAIModelID, OpenAIModels } from '@/types/openai';\nimport { OPENAI_API_HOST } from '@/utils/app/const';\n\nexport const config = {\n  runtime: 'edge',\n};\n\nconst handler = async (req: Request): Promise<Response> => {\n  try {\n    const { key } = (await req.json()) as {\n      key: string;\n    };\n\n    const response = await fetch(`${OPENAI_API_HOST}/v1/models`, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${key ? key : process.env.OPENAI_API_KEY}`,\n        ...(process.env.OPENAI_ORGANIZATION && {\n          'OpenAI-Organization': process.env.OPENAI_ORGANIZATION,\n        })\n      },\n    });\n\n    if (response.status === 401) {\n      return new Response(response.body, {\n        status: 500,\n        headers: response.headers,\n      });\n    } else if (response.status !== 200) {\n      console.error(\n        `OpenAI API returned an error ${\n          response.status\n        }: ${await response.text()}`,\n      );\n      throw new Error('OpenAI API returned an error');\n    }\n\n    const json = await response.json();\n\n    const models: OpenAIModel[] = json.data\n      .map((model: any) => {\n        for (const [key, value] of Object.entries(OpenAIModelID)) {\n          if (value === model.id) {\n            return {\n              id: model.id,\n              name: OpenAIModels[value].name,\n            };\n          }\n        }\n      })\n      .filter(Boolean);\n\n    return new Response(JSON.stringify(models), { status: 200 });\n  } catch (error) {\n    console.error(error);\n    return new Response('Error', { status: 500 });\n  }\n};\n\nexport default handler;\n","export const DEFAULT_SYSTEM_PROMPT =\n  process.env.DEFAULT_SYSTEM_PROMPT || \"You are ChatGPT, a large language model trained by OpenAI. Follow the user's instructions carefully. Respond using markdown.\";\n\nexport const OPENAI_API_HOST =\n  process.env.OPENAI_API_HOST || 'https://api.openai.com';\n","\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  RequestCookies: () => RequestCookies,\n  ResponseCookies: () => ResponseCookies\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/serialize.ts\nfunction serialize(c) {\n  const attrs = [\n    \"path\" in c && c.path && `Path=${c.path}`,\n    \"expires\" in c && c.expires && `Expires=${c.expires.toUTCString()}`,\n    \"maxAge\" in c && c.maxAge && `Max-Age=${c.maxAge}`,\n    \"domain\" in c && c.domain && `Domain=${c.domain}`,\n    \"secure\" in c && c.secure && \"Secure\",\n    \"httpOnly\" in c && c.httpOnly && \"HttpOnly\",\n    \"sameSite\" in c && c.sameSite && `SameSite=${c.sameSite}`\n  ].filter(Boolean);\n  return `${c.name}=${encodeURIComponent(c.value ?? \"\")}; ${attrs.join(\"; \")}`;\n}\nfunction parseCookieString(cookie) {\n  const map = /* @__PURE__ */ new Map();\n  for (const pair of cookie.split(/; */)) {\n    if (!pair)\n      continue;\n    const splitAt = pair.indexOf(\"=\");\n    const [key, value] = [pair.slice(0, splitAt), pair.slice(splitAt + 1)];\n    try {\n      map.set(key, decodeURIComponent(value ?? \"true\"));\n    } catch {\n    }\n  }\n  return map;\n}\nfunction parseSetCookieString(setCookie) {\n  if (!setCookie) {\n    return void 0;\n  }\n  const [[name, value], ...attributes] = parseCookieString(setCookie);\n  const { domain, expires, httponly, maxage, path, samesite, secure } = Object.fromEntries(\n    attributes.map(([key, value2]) => [key.toLowerCase(), value2])\n  );\n  const cookie = {\n    name,\n    value: decodeURIComponent(value),\n    domain,\n    ...expires && { expires: new Date(expires) },\n    ...httponly && { httpOnly: true },\n    ...typeof maxage === \"string\" && { maxAge: Number(maxage) },\n    path,\n    ...samesite && { sameSite: parseSameSite(samesite) },\n    ...secure && { secure: true }\n  };\n  return compact(cookie);\n}\nfunction compact(t) {\n  const newT = {};\n  for (const key in t) {\n    if (t[key]) {\n      newT[key] = t[key];\n    }\n  }\n  return newT;\n}\nvar SAME_SITE = [\"strict\", \"lax\", \"none\"];\nfunction parseSameSite(string) {\n  string = string.toLowerCase();\n  return SAME_SITE.includes(string) ? string : void 0;\n}\n\n// src/request-cookies.ts\nvar RequestCookies = class {\n  constructor(requestHeaders) {\n    this._parsed = /* @__PURE__ */ new Map();\n    this._headers = requestHeaders;\n    const header = requestHeaders.get(\"cookie\");\n    if (header) {\n      const parsed = parseCookieString(header);\n      for (const [name, value] of parsed) {\n        this._parsed.set(name, { name, value });\n      }\n    }\n  }\n  [Symbol.iterator]() {\n    return this._parsed[Symbol.iterator]();\n  }\n  get size() {\n    return this._parsed.size;\n  }\n  get(...args) {\n    const name = typeof args[0] === \"string\" ? args[0] : args[0].name;\n    return this._parsed.get(name);\n  }\n  getAll(...args) {\n    var _a;\n    const all = Array.from(this._parsed);\n    if (!args.length) {\n      return all.map(([_, value]) => value);\n    }\n    const name = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\n    return all.filter(([n]) => n === name).map(([_, value]) => value);\n  }\n  has(name) {\n    return this._parsed.has(name);\n  }\n  set(...args) {\n    const [name, value] = args.length === 1 ? [args[0].name, args[0].value] : args;\n    const map = this._parsed;\n    map.set(name, { name, value });\n    this._headers.set(\n      \"cookie\",\n      Array.from(map).map(([_, value2]) => serialize(value2)).join(\"; \")\n    );\n    return this;\n  }\n  delete(names) {\n    const map = this._parsed;\n    const result = !Array.isArray(names) ? map.delete(names) : names.map((name) => map.delete(name));\n    this._headers.set(\n      \"cookie\",\n      Array.from(map).map(([_, value]) => serialize(value)).join(\"; \")\n    );\n    return result;\n  }\n  clear() {\n    this.delete(Array.from(this._parsed.keys()));\n    return this;\n  }\n  [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n    return `RequestCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n  }\n  toString() {\n    return [...this._parsed.values()].map((v) => `${v.name}=${encodeURIComponent(v.value)}`).join(\"; \");\n  }\n};\n\n// src/response-cookies.ts\nvar ResponseCookies = class {\n  constructor(responseHeaders) {\n    this._parsed = /* @__PURE__ */ new Map();\n    var _a;\n    this._headers = responseHeaders;\n    const setCookie = ((_a = responseHeaders.getAll) == null ? void 0 : _a.call(responseHeaders, \"set-cookie\")) ?? responseHeaders.get(\"set-cookie\") ?? [];\n    const cookieStrings = Array.isArray(setCookie) ? setCookie : splitCookiesString(setCookie);\n    for (const cookieString of cookieStrings) {\n      const parsed = parseSetCookieString(cookieString);\n      if (parsed)\n        this._parsed.set(parsed.name, parsed);\n    }\n  }\n  get(...args) {\n    const key = typeof args[0] === \"string\" ? args[0] : args[0].name;\n    return this._parsed.get(key);\n  }\n  getAll(...args) {\n    var _a;\n    const all = Array.from(this._parsed.values());\n    if (!args.length) {\n      return all;\n    }\n    const key = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\n    return all.filter((c) => c.name === key);\n  }\n  set(...args) {\n    const [name, value, cookie] = args.length === 1 ? [args[0].name, args[0].value, args[0]] : args;\n    const map = this._parsed;\n    map.set(name, normalizeCookie({ name, value, ...cookie }));\n    replace(map, this._headers);\n    return this;\n  }\n  delete(...args) {\n    const name = typeof args[0] === \"string\" ? args[0] : args[0].name;\n    return this.set({ name, value: \"\", expires: new Date(0) });\n  }\n  [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n    return `ResponseCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n  }\n  toString() {\n    return [...this._parsed.values()].map(serialize).join(\"; \");\n  }\n};\nfunction replace(bag, headers) {\n  headers.delete(\"set-cookie\");\n  for (const [, value] of bag) {\n    const serialized = serialize(value);\n    headers.append(\"set-cookie\", serialized);\n  }\n}\nfunction normalizeCookie(cookie = { name: \"\", value: \"\" }) {\n  if (cookie.maxAge) {\n    cookie.expires = new Date(Date.now() + cookie.maxAge * 1e3);\n  }\n  if (cookie.path === null || cookie.path === void 0) {\n    cookie.path = \"/\";\n  }\n  return cookie;\n}\nfunction splitCookiesString(cookiesString) {\n  if (!cookiesString)\n    return [];\n  var cookiesStrings = [];\n  var pos = 0;\n  var start;\n  var ch;\n  var lastComma;\n  var nextStart;\n  var cookiesSeparatorFound;\n  function skipWhitespace() {\n    while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n      pos += 1;\n    }\n    return pos < cookiesString.length;\n  }\n  function notSpecialChar() {\n    ch = cookiesString.charAt(pos);\n    return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n  }\n  while (pos < cookiesString.length) {\n    start = pos;\n    cookiesSeparatorFound = false;\n    while (skipWhitespace()) {\n      ch = cookiesString.charAt(pos);\n      if (ch === \",\") {\n        lastComma = pos;\n        pos += 1;\n        skipWhitespace();\n        nextStart = pos;\n        while (pos < cookiesString.length && notSpecialChar()) {\n          pos += 1;\n        }\n        if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n          cookiesSeparatorFound = true;\n          pos = nextStart;\n          cookiesStrings.push(cookiesString.substring(start, lastComma));\n          start = pos;\n        } else {\n          pos = lastComma + 1;\n        }\n      } else {\n        pos += 1;\n      }\n    }\n    if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n      cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n    }\n  }\n  return cookiesStrings;\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  RequestCookies,\n  ResponseCookies\n});\n","export class PageSignatureError extends Error {\n    constructor({ page  }){\n        super(`The middleware \"${page}\" accepts an async API directly with the form:\n  \n  export function middleware(request, event) {\n    return NextResponse.redirect('/new-location')\n  }\n  \n  Read more: https://nextjs.org/docs/messages/middleware-new-signature\n  `);\n    }\n}\nexport class RemovedPageError extends Error {\n    constructor(){\n        super(`The request.page has been deprecated in favour of \\`URLPattern\\`.\n  Read more: https://nextjs.org/docs/messages/middleware-request-page\n  `);\n    }\n}\nexport class RemovedUAError extends Error {\n    constructor(){\n        super(`The request.ua has been removed in favour of \\`userAgent\\` function.\n  Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n  `);\n    }\n}\n\n//# sourceMappingURL=error.js.map","export function fromNodeHeaders(object) {\n    const headers = new Headers();\n    for (let [key, value] of Object.entries(object)){\n        const values = Array.isArray(value) ? value : [\n            value\n        ];\n        for (let v of values){\n            if (v !== undefined) {\n                headers.append(key, v);\n            }\n        }\n    }\n    return headers;\n}\n/*\n  Set-Cookie header field-values are sometimes comma joined in one string. This splits them without choking on commas\n  that are within a single set-cookie field-value, such as in the Expires portion.\n  This is uncommon, but explicitly allowed - see https://tools.ietf.org/html/rfc2616#section-4.2\n  Node.js does this for every header *except* set-cookie - see https://github.com/nodejs/node/blob/d5e363b77ebaf1caf67cd7528224b651c86815c1/lib/_http_incoming.js#L128\n  React Native's fetch does this for *every* header, including set-cookie.\n  \n  Based on: https://github.com/google/j2objc/commit/16820fdbc8f76ca0c33472810ce0cb03d20efe25\n  Credits to: https://github.com/tomball for original and https://github.com/chrusart for JavaScript implementation\n*/ export function splitCookiesString(cookiesString) {\n    var cookiesStrings = [];\n    var pos = 0;\n    var start;\n    var ch;\n    var lastComma;\n    var nextStart;\n    var cookiesSeparatorFound;\n    function skipWhitespace() {\n        while(pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))){\n            pos += 1;\n        }\n        return pos < cookiesString.length;\n    }\n    function notSpecialChar() {\n        ch = cookiesString.charAt(pos);\n        return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n    }\n    while(pos < cookiesString.length){\n        start = pos;\n        cookiesSeparatorFound = false;\n        while(skipWhitespace()){\n            ch = cookiesString.charAt(pos);\n            if (ch === \",\") {\n                // ',' is a cookie separator if we have later first '=', not ';' or ','\n                lastComma = pos;\n                pos += 1;\n                skipWhitespace();\n                nextStart = pos;\n                while(pos < cookiesString.length && notSpecialChar()){\n                    pos += 1;\n                }\n                // currently special character\n                if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n                    // we found cookies separator\n                    cookiesSeparatorFound = true;\n                    // pos is inside the next cookie, so back up and return it.\n                    pos = nextStart;\n                    cookiesStrings.push(cookiesString.substring(start, lastComma));\n                    start = pos;\n                } else {\n                    // in param ',' or param separator ';',\n                    // we continue from that comma\n                    pos = lastComma + 1;\n                }\n            } else {\n                pos += 1;\n            }\n        }\n        if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n            cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n        }\n    }\n    return cookiesStrings;\n}\nexport function toNodeHeaders(headers) {\n    const result = {};\n    if (headers) {\n        for (const [key, value] of headers.entries()){\n            result[key] = value;\n            if (key.toLowerCase() === \"set-cookie\") {\n                result[key] = splitCookiesString(value);\n            }\n        }\n    }\n    return result;\n}\n/**\n * Validate the correctness of a user-provided URL.\n */ export function validateURL(url) {\n    try {\n        return String(new URL(String(url)));\n    } catch (error) {\n        throw new Error(`URL is malformed \"${String(url)}\". Please use only absolute URLs - https://nextjs.org/docs/messages/middleware-relative-urls`, {\n            cause: error\n        });\n    }\n}\n\n//# sourceMappingURL=utils.js.map","import { PageSignatureError } from \"../error\";\nconst responseSymbol = Symbol(\"response\");\nconst passThroughSymbol = Symbol(\"passThrough\");\nexport const waitUntilSymbol = Symbol(\"waitUntil\");\nclass FetchEvent {\n    [waitUntilSymbol] = [];\n    [passThroughSymbol] = false;\n    // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n    constructor(_request){}\n    respondWith(response) {\n        if (!this[responseSymbol]) {\n            this[responseSymbol] = Promise.resolve(response);\n        }\n    }\n    passThroughOnException() {\n        this[passThroughSymbol] = true;\n    }\n    waitUntil(promise) {\n        this[waitUntilSymbol].push(promise);\n    }\n}\nexport class NextFetchEvent extends FetchEvent {\n    constructor(params){\n        super(params.request);\n        this.sourcePage = params.page;\n    }\n    /**\n   * @deprecated The `request` is now the first parameter and the API is now async.\n   *\n   * Read more: https://nextjs.org/docs/messages/middleware-new-signature\n   */ get request() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n    /**\n   * @deprecated Using `respondWith` is no longer needed.\n   *\n   * Read more: https://nextjs.org/docs/messages/middleware-new-signature\n   */ respondWith() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n}\n\n//# sourceMappingURL=fetch-event.js.map","export function detectDomainLocale(domainItems, hostname, detectedLocale) {\n    let domainItem;\n    if (domainItems) {\n        if (detectedLocale) {\n            detectedLocale = detectedLocale.toLowerCase();\n        }\n        for (const item of domainItems){\n            var ref, ref1;\n            // remove port if present\n            const domainHostname = (ref = item.domain) == null ? void 0 : ref.split(':')[0].toLowerCase();\n            if (hostname === domainHostname || detectedLocale === item.defaultLocale.toLowerCase() || ((ref1 = item.locales) == null ? void 0 : ref1.some((locale)=>locale.toLowerCase() === detectedLocale))) {\n                domainItem = item;\n                break;\n            }\n        }\n    }\n    return domainItem;\n}\n\n//# sourceMappingURL=detect-domain-locale.js.map","/**\n * Removes the trailing slash for a given route or page path. Preserves the\n * root page. Examples:\n *   - `/foo/bar/` -> `/foo/bar`\n *   - `/foo/bar` -> `/foo/bar`\n *   - `/` -> `/`\n */ export function removeTrailingSlash(route) {\n    return route.replace(/\\/$/, '') || '/';\n}\n\n//# sourceMappingURL=remove-trailing-slash.js.map","/**\n * Given a path this function will find the pathname, query and hash and return\n * them. This is useful to parse full paths on the client side.\n * @param path A path to parse e.g. /foo/bar?id=1#hash\n */ export function parsePath(path) {\n    const hashIndex = path.indexOf('#');\n    const queryIndex = path.indexOf('?');\n    const hasQuery = queryIndex > -1 && (hashIndex < 0 || queryIndex < hashIndex);\n    if (hasQuery || hashIndex > -1) {\n        return {\n            pathname: path.substring(0, hasQuery ? queryIndex : hashIndex),\n            query: hasQuery ? path.substring(queryIndex, hashIndex > -1 ? hashIndex : undefined) : '',\n            hash: hashIndex > -1 ? path.slice(hashIndex) : ''\n        };\n    }\n    return {\n        pathname: path,\n        query: '',\n        hash: ''\n    };\n}\n\n//# sourceMappingURL=parse-path.js.map","import { parsePath } from './parse-path';\n/**\n * Adds the provided prefix to the given path. It first ensures that the path\n * is indeed starting with a slash.\n */ export function addPathPrefix(path, prefix) {\n    if (!path.startsWith('/') || !prefix) {\n        return path;\n    }\n    const { pathname , query , hash  } = parsePath(path);\n    return `${prefix}${pathname}${query}${hash}`;\n}\n\n//# sourceMappingURL=add-path-prefix.js.map","import { parsePath } from './parse-path';\n/**\n * Similarly to `addPathPrefix`, this function adds a suffix at the end on the\n * provided path. It also works only for paths ensuring the argument starts\n * with a slash.\n */ export function addPathSuffix(path, suffix) {\n    if (!path.startsWith('/') || !suffix) {\n        return path;\n    }\n    const { pathname , query , hash  } = parsePath(path);\n    return `${pathname}${suffix}${query}${hash}`;\n}\n\n//# sourceMappingURL=add-path-suffix.js.map","import { parsePath } from './parse-path';\n/**\n * Checks if a given path starts with a given prefix. It ensures it matches\n * exactly without containing extra chars. e.g. prefix /docs should replace\n * for /docs, /docs/, /docs/a but not /docsss\n * @param path The path to check.\n * @param prefix The prefix to check against.\n */ export function pathHasPrefix(path, prefix) {\n    if (typeof path !== 'string') {\n        return false;\n    }\n    const { pathname  } = parsePath(path);\n    return pathname === prefix || pathname.startsWith(prefix + '/');\n}\n\n//# sourceMappingURL=path-has-prefix.js.map","import { addPathPrefix } from './add-path-prefix';\nimport { pathHasPrefix } from './path-has-prefix';\n/**\n * For a given path and a locale, if the locale is given, it will prefix the\n * locale. The path shouldn't be an API path. If a default locale is given the\n * prefix will be omitted if the locale is already the default locale.\n */ export function addLocale(path, locale, defaultLocale, ignorePrefix) {\n    if (locale && locale !== defaultLocale && (ignorePrefix || !pathHasPrefix(path.toLowerCase(), `/${locale.toLowerCase()}`) && !pathHasPrefix(path.toLowerCase(), '/api'))) {\n        return addPathPrefix(path, `/${locale}`);\n    }\n    return path;\n}\n\n//# sourceMappingURL=add-locale.js.map","import { removeTrailingSlash } from './remove-trailing-slash';\nimport { addPathPrefix } from './add-path-prefix';\nimport { addPathSuffix } from './add-path-suffix';\nimport { addLocale } from './add-locale';\nexport function formatNextPathnameInfo(info) {\n    let pathname = addLocale(info.pathname, info.locale, info.buildId ? undefined : info.defaultLocale, info.ignorePrefix);\n    if (info.buildId || !info.trailingSlash) {\n        pathname = removeTrailingSlash(pathname);\n    }\n    if (info.buildId) {\n        pathname = addPathSuffix(addPathPrefix(pathname, `/_next/data/${info.buildId}`), info.pathname === '/' ? 'index.json' : '.json');\n    }\n    pathname = addPathPrefix(pathname, info.basePath);\n    return !info.buildId && info.trailingSlash ? !pathname.endsWith('/') ? addPathSuffix(pathname, '/') : pathname : removeTrailingSlash(pathname);\n}\n\n//# sourceMappingURL=format-next-pathname-info.js.map","/**\n * Takes an object with a hostname property (like a parsed URL) and some\n * headers that may contain Host and returns the preferred hostname.\n * @param parsed An object containing a hostname property.\n * @param headers A dictionary with headers containing a `host`.\n */ export function getHostname(parsed, headers) {\n    var ref;\n    return (ref = !Array.isArray(headers == null ? void 0 : headers.host) && (headers == null ? void 0 : headers.host) || parsed.hostname) == null ? void 0 : ref.split(':')[0].toLowerCase();\n}\n\n//# sourceMappingURL=get-hostname.js.map","/**\n * For a pathname that may include a locale from a list of locales, it\n * removes the locale from the pathname returning it alongside with the\n * detected locale.\n *\n * @param pathname A pathname that may include a locale.\n * @param locales A list of locales.\n * @returns The detected locale and pathname without locale\n */ export function normalizeLocalePath(pathname, locales) {\n    let detectedLocale;\n    // first item will be empty string from splitting at first char\n    const pathnameParts = pathname.split('/');\n    (locales || []).some((locale)=>{\n        if (pathnameParts[1] && pathnameParts[1].toLowerCase() === locale.toLowerCase()) {\n            detectedLocale = locale;\n            pathnameParts.splice(1, 1);\n            pathname = pathnameParts.join('/') || '/';\n            return true;\n        }\n        return false;\n    });\n    return {\n        pathname,\n        detectedLocale\n    };\n}\n\n//# sourceMappingURL=normalize-locale-path.js.map","import { pathHasPrefix } from './path-has-prefix';\n/**\n * Given a path and a prefix it will remove the prefix when it exists in the\n * given path. It ensures it matches exactly without containing extra chars\n * and if the prefix is not there it will be noop.\n * @param path The path to remove the prefix from.\n * @param prefix The prefix to be removed.\n */ export function removePathPrefix(path, prefix) {\n    if (pathHasPrefix(path, prefix)) {\n        const withoutPrefix = path.slice(prefix.length);\n        return withoutPrefix.startsWith('/') ? withoutPrefix : `/${withoutPrefix}`;\n    }\n    return path;\n}\n\n//# sourceMappingURL=remove-path-prefix.js.map","import { normalizeLocalePath } from '../../i18n/normalize-locale-path';\nimport { removePathPrefix } from './remove-path-prefix';\nimport { pathHasPrefix } from './path-has-prefix';\nexport function getNextPathnameInfo(pathname, options) {\n    var _nextConfig;\n    const { basePath , i18n , trailingSlash  } = (_nextConfig = options.nextConfig) != null ? _nextConfig : {};\n    const info = {\n        pathname: pathname,\n        trailingSlash: pathname !== '/' ? pathname.endsWith('/') : trailingSlash\n    };\n    if (basePath && pathHasPrefix(info.pathname, basePath)) {\n        info.pathname = removePathPrefix(info.pathname, basePath);\n        info.basePath = basePath;\n    }\n    if (options.parseData === true && info.pathname.startsWith('/_next/data/') && info.pathname.endsWith('.json')) {\n        const paths = info.pathname.replace(/^\\/_next\\/data\\//, '').replace(/\\.json$/, '').split('/');\n        const buildId = paths[0];\n        info.pathname = paths[1] !== 'index' ? `/${paths.slice(1).join('/')}` : '/';\n        info.buildId = buildId;\n    }\n    if (i18n) {\n        const pathLocale = normalizeLocalePath(info.pathname, i18n.locales);\n        info.locale = pathLocale == null ? void 0 : pathLocale.detectedLocale;\n        info.pathname = (pathLocale == null ? void 0 : pathLocale.pathname) || info.pathname;\n    }\n    return info;\n}\n\n//# sourceMappingURL=get-next-pathname-info.js.map","import { detectDomainLocale } from \"../../shared/lib/i18n/detect-domain-locale\";\nimport { formatNextPathnameInfo } from \"../../shared/lib/router/utils/format-next-pathname-info\";\nimport { getHostname } from \"../../shared/lib/get-hostname\";\nimport { getNextPathnameInfo } from \"../../shared/lib/router/utils/get-next-pathname-info\";\nconst REGEX_LOCALHOST_HOSTNAME = /(?!^https?:\\/\\/)(127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}|::1|localhost)/;\nfunction parseURL(url, base) {\n    return new URL(String(url).replace(REGEX_LOCALHOST_HOSTNAME, \"localhost\"), base && String(base).replace(REGEX_LOCALHOST_HOSTNAME, \"localhost\"));\n}\nconst Internal = Symbol(\"NextURLInternal\");\nexport class NextURL {\n    constructor(input, baseOrOpts, opts){\n        let base;\n        let options;\n        if (typeof baseOrOpts === \"object\" && \"pathname\" in baseOrOpts || typeof baseOrOpts === \"string\") {\n            base = baseOrOpts;\n            options = opts || {};\n        } else {\n            options = opts || baseOrOpts || {};\n        }\n        this[Internal] = {\n            url: parseURL(input, base ?? options.base),\n            options: options,\n            basePath: \"\"\n        };\n        this.analyzeUrl();\n    }\n    analyzeUrl() {\n        var ref, ref1, ref2, ref3, ref4;\n        const pathnameInfo = getNextPathnameInfo(this[Internal].url.pathname, {\n            nextConfig: this[Internal].options.nextConfig,\n            parseData: !process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE\n        });\n        this[Internal].domainLocale = detectDomainLocale((ref = this[Internal].options.nextConfig) == null ? void 0 : (ref1 = ref.i18n) == null ? void 0 : ref1.domains, getHostname(this[Internal].url, this[Internal].options.headers));\n        const defaultLocale = ((ref2 = this[Internal].domainLocale) == null ? void 0 : ref2.defaultLocale) || ((ref3 = this[Internal].options.nextConfig) == null ? void 0 : (ref4 = ref3.i18n) == null ? void 0 : ref4.defaultLocale);\n        this[Internal].url.pathname = pathnameInfo.pathname;\n        this[Internal].defaultLocale = defaultLocale;\n        this[Internal].basePath = pathnameInfo.basePath ?? \"\";\n        this[Internal].buildId = pathnameInfo.buildId;\n        this[Internal].locale = pathnameInfo.locale ?? defaultLocale;\n        this[Internal].trailingSlash = pathnameInfo.trailingSlash;\n    }\n    formatPathname() {\n        return formatNextPathnameInfo({\n            basePath: this[Internal].basePath,\n            buildId: this[Internal].buildId,\n            defaultLocale: !this[Internal].options.forceLocale ? this[Internal].defaultLocale : undefined,\n            locale: this[Internal].locale,\n            pathname: this[Internal].url.pathname,\n            trailingSlash: this[Internal].trailingSlash\n        });\n    }\n    formatSearch() {\n        return this[Internal].url.search;\n    }\n    get buildId() {\n        return this[Internal].buildId;\n    }\n    set buildId(buildId) {\n        this[Internal].buildId = buildId;\n    }\n    get locale() {\n        return this[Internal].locale ?? \"\";\n    }\n    set locale(locale) {\n        var ref, ref5;\n        if (!this[Internal].locale || !((ref = this[Internal].options.nextConfig) == null ? void 0 : (ref5 = ref.i18n) == null ? void 0 : ref5.locales.includes(locale))) {\n            throw new TypeError(`The NextURL configuration includes no locale \"${locale}\"`);\n        }\n        this[Internal].locale = locale;\n    }\n    get defaultLocale() {\n        return this[Internal].defaultLocale;\n    }\n    get domainLocale() {\n        return this[Internal].domainLocale;\n    }\n    get searchParams() {\n        return this[Internal].url.searchParams;\n    }\n    get host() {\n        return this[Internal].url.host;\n    }\n    set host(value) {\n        this[Internal].url.host = value;\n    }\n    get hostname() {\n        return this[Internal].url.hostname;\n    }\n    set hostname(value) {\n        this[Internal].url.hostname = value;\n    }\n    get port() {\n        return this[Internal].url.port;\n    }\n    set port(value) {\n        this[Internal].url.port = value;\n    }\n    get protocol() {\n        return this[Internal].url.protocol;\n    }\n    set protocol(value) {\n        this[Internal].url.protocol = value;\n    }\n    get href() {\n        const pathname = this.formatPathname();\n        const search = this.formatSearch();\n        return `${this.protocol}//${this.host}${pathname}${search}${this.hash}`;\n    }\n    set href(url) {\n        this[Internal].url = parseURL(url);\n        this.analyzeUrl();\n    }\n    get origin() {\n        return this[Internal].url.origin;\n    }\n    get pathname() {\n        return this[Internal].url.pathname;\n    }\n    set pathname(value) {\n        this[Internal].url.pathname = value;\n    }\n    get hash() {\n        return this[Internal].url.hash;\n    }\n    set hash(value) {\n        this[Internal].url.hash = value;\n    }\n    get search() {\n        return this[Internal].url.search;\n    }\n    set search(value) {\n        this[Internal].url.search = value;\n    }\n    get password() {\n        return this[Internal].url.password;\n    }\n    set password(value) {\n        this[Internal].url.password = value;\n    }\n    get username() {\n        return this[Internal].url.username;\n    }\n    set username(value) {\n        this[Internal].url.username = value;\n    }\n    get basePath() {\n        return this[Internal].basePath;\n    }\n    set basePath(value) {\n        this[Internal].basePath = value.startsWith(\"/\") ? value : `/${value}`;\n    }\n    toString() {\n        return this.href;\n    }\n    toJSON() {\n        return this.href;\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return {\n            href: this.href,\n            origin: this.origin,\n            protocol: this.protocol,\n            username: this.username,\n            password: this.password,\n            host: this.host,\n            hostname: this.hostname,\n            port: this.port,\n            pathname: this.pathname,\n            search: this.search,\n            searchParams: this.searchParams,\n            hash: this.hash\n        };\n    }\n    clone() {\n        return new NextURL(String(this), this[Internal].options);\n    }\n}\n\n//# sourceMappingURL=next-url.js.map","export * from \"next/dist/compiled/@edge-runtime/cookies\";\n\n//# sourceMappingURL=cookies.js.map","import { NextURL } from \"../next-url\";\nimport { toNodeHeaders, validateURL } from \"../utils\";\nimport { RemovedUAError, RemovedPageError } from \"../error\";\nimport { RequestCookies } from \"./cookies\";\nexport const INTERNALS = Symbol(\"internal request\");\nexport class NextRequest extends Request {\n    constructor(input, init = {}){\n        const url = typeof input !== \"string\" && \"url\" in input ? input.url : String(input);\n        validateURL(url);\n        super(url, init);\n        this[INTERNALS] = {\n            cookies: new RequestCookies(this.headers),\n            geo: init.geo || {},\n            ip: init.ip,\n            url: new NextURL(url, {\n                headers: toNodeHeaders(this.headers),\n                nextConfig: init.nextConfig\n            })\n        };\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return {\n            cookies: this.cookies,\n            geo: this.geo,\n            ip: this.ip,\n            nextUrl: this.nextUrl,\n            url: this.url,\n            // rest of props come from Request\n            bodyUsed: this.bodyUsed,\n            cache: this.cache,\n            credentials: this.credentials,\n            destination: this.destination,\n            headers: Object.fromEntries(this.headers),\n            integrity: this.integrity,\n            keepalive: this.keepalive,\n            method: this.method,\n            mode: this.mode,\n            redirect: this.redirect,\n            referrer: this.referrer,\n            referrerPolicy: this.referrerPolicy,\n            signal: this.signal\n        };\n    }\n    get cookies() {\n        return this[INTERNALS].cookies;\n    }\n    get geo() {\n        return this[INTERNALS].geo;\n    }\n    get ip() {\n        return this[INTERNALS].ip;\n    }\n    get nextUrl() {\n        return this[INTERNALS].url;\n    }\n    /**\n   * @deprecated\n   * `page` has been deprecated in favour of `URLPattern`.\n   * Read more: https://nextjs.org/docs/messages/middleware-request-page\n   */ get page() {\n        throw new RemovedPageError();\n    }\n    /**\n   * @deprecated\n   * `ua` has been removed in favour of \\`userAgent\\` function.\n   * Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n   */ get ua() {\n        throw new RemovedUAError();\n    }\n    get url() {\n        return this[INTERNALS].url.toString();\n    }\n}\n\n//# sourceMappingURL=request.js.map","import { NextURL } from \"../next-url\";\nimport { toNodeHeaders, validateURL } from \"../utils\";\nimport { ResponseCookies } from \"./cookies\";\nconst INTERNALS = Symbol(\"internal response\");\nconst REDIRECTS = new Set([\n    301,\n    302,\n    303,\n    307,\n    308\n]);\nfunction handleMiddlewareField(init, headers) {\n    var ref;\n    if (init == null ? void 0 : (ref = init.request) == null ? void 0 : ref.headers) {\n        if (!(init.request.headers instanceof Headers)) {\n            throw new Error(\"request.headers must be an instance of Headers\");\n        }\n        const keys = [];\n        for (const [key, value] of init.request.headers){\n            headers.set(\"x-middleware-request-\" + key, value);\n            keys.push(key);\n        }\n        headers.set(\"x-middleware-override-headers\", keys.join(\",\"));\n    }\n}\nexport class NextResponse extends Response {\n    constructor(body, init = {}){\n        super(body, init);\n        this[INTERNALS] = {\n            cookies: new ResponseCookies(this.headers),\n            url: init.url ? new NextURL(init.url, {\n                headers: toNodeHeaders(this.headers),\n                nextConfig: init.nextConfig\n            }) : undefined\n        };\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return {\n            cookies: this.cookies,\n            url: this.url,\n            // rest of props come from Response\n            body: this.body,\n            bodyUsed: this.bodyUsed,\n            headers: Object.fromEntries(this.headers),\n            ok: this.ok,\n            redirected: this.redirected,\n            status: this.status,\n            statusText: this.statusText,\n            type: this.type\n        };\n    }\n    get cookies() {\n        return this[INTERNALS].cookies;\n    }\n    static json(body, init) {\n        // @ts-expect-error This is not in lib/dom right now, and we can't augment it.\n        const response = Response.json(body, init);\n        return new NextResponse(response.body, response);\n    }\n    static redirect(url, init) {\n        const status = typeof init === \"number\" ? init : (init == null ? void 0 : init.status) ?? 307;\n        if (!REDIRECTS.has(status)) {\n            throw new RangeError('Failed to execute \"redirect\" on \"response\": Invalid status code');\n        }\n        const initObj = typeof init === \"object\" ? init : {};\n        const headers = new Headers(initObj == null ? void 0 : initObj.headers);\n        headers.set(\"Location\", validateURL(url));\n        return new NextResponse(null, {\n            ...initObj,\n            headers,\n            status\n        });\n    }\n    static rewrite(destination, init) {\n        const headers = new Headers(init == null ? void 0 : init.headers);\n        headers.set(\"x-middleware-rewrite\", validateURL(destination));\n        handleMiddlewareField(init, headers);\n        return new NextResponse(null, {\n            ...init,\n            headers\n        });\n    }\n    static next(init) {\n        const headers = new Headers(init == null ? void 0 : init.headers);\n        headers.set(\"x-middleware-next\", \"1\");\n        handleMiddlewareField(init, headers);\n        return new NextResponse(null, {\n            ...init,\n            headers\n        });\n    }\n}\n\n//# sourceMappingURL=response.js.map","/**\n * Given a URL as a string and a base URL it will make the URL relative\n * if the parsed protocol and host is the same as the one in the base\n * URL. Otherwise it returns the same URL string.\n */ export function relativizeURL(url, base) {\n    const baseURL = typeof base === 'string' ? new URL(base) : base;\n    const relative = new URL(url, base);\n    const origin = `${baseURL.protocol}//${baseURL.host}`;\n    return `${relative.protocol}//${relative.host}` === origin ? relative.toString().replace(origin, '') : relative.toString();\n}\n\n//# sourceMappingURL=relativize-url.js.map","const INTERNAL_QUERY_NAMES = [\n    \"__nextFallback\",\n    \"__nextLocale\",\n    \"__nextDefaultLocale\",\n    \"__nextIsNotFound\", \n];\nconst EXTENDED_INTERNAL_QUERY_NAMES = [\n    \"__nextDataReq\"\n];\nexport function stripInternalQueries(query) {\n    for (const name of INTERNAL_QUERY_NAMES){\n        delete query[name];\n    }\n}\nexport function stripInternalSearchParams(searchParams, extended) {\n    for (const name of INTERNAL_QUERY_NAMES){\n        searchParams.delete(name);\n    }\n    if (extended) {\n        for (const name of EXTENDED_INTERNAL_QUERY_NAMES){\n            searchParams.delete(name);\n        }\n    }\n    return searchParams;\n}\n\n//# sourceMappingURL=internal-utils.js.map","import { ensureLeadingSlash } from '../../page-path/ensure-leading-slash';\n/**\n * Normalizes an app route so it represents the actual request path. Essentially\n * performing the following transformations:\n *\n * - `/(dashboard)/user/[id]/page` to `/user/[id]`\n * - `/(dashboard)/account/page` to `/account`\n * - `/user/[id]/page` to `/user/[id]`\n * - `/account/page` to `/account`\n * - `/page` to `/`\n * - `/(dashboard)/user/[id]/route` to `/user/[id]`\n * - `/(dashboard)/account/route` to `/account`\n * - `/user/[id]/route` to `/user/[id]`\n * - `/account/route` to `/account`\n * - `/route` to `/`\n * - `/` to `/`\n *\n * @param route the app route to normalize\n * @returns the normalized pathname\n */ export function normalizeAppPath(route) {\n    return ensureLeadingSlash(route.split('/').reduce((pathname, segment, index, segments)=>{\n        // Empty segments are ignored.\n        if (!segment) {\n            return pathname;\n        }\n        // Groups are ignored.\n        if (segment.startsWith('(') && segment.endsWith(')')) {\n            return pathname;\n        }\n        // Parallel segments are ignored.\n        if (segment.startsWith('@')) {\n            return pathname;\n        }\n        // The last segment (if it's a leaf) should be ignored.\n        if ((segment === 'page' || segment === 'route') && index === segments.length - 1) {\n            return pathname;\n        }\n        return `${pathname}/${segment}`;\n    }, ''));\n}\n/**\n * Strips the `.rsc` extension if it's in the pathname.\n * Since this function is used on full urls it checks `?` for searchParams handling.\n */ export function normalizeRscPath(pathname, enabled) {\n    return enabled ? pathname.replace(/\\.rsc($|\\?)/, // $1 ensures `?` is preserved\n    '$1') : pathname;\n}\n\n//# sourceMappingURL=app-paths.js.map","export const RSC = 'RSC';\nexport const ACTION = 'Next-Action';\nexport const NEXT_ROUTER_STATE_TREE = 'Next-Router-State-Tree';\nexport const NEXT_ROUTER_PREFETCH = 'Next-Router-Prefetch';\nexport const FETCH_CACHE_HEADER = 'x-vercel-sc-headers';\nexport const RSC_CONTENT_TYPE_HEADER = 'text/x-component';\nexport const RSC_VARY_HEADER = `${RSC}, ${NEXT_ROUTER_STATE_TREE}, ${NEXT_ROUTER_PREFETCH}`;\nexport const FLIGHT_PARAMETERS = [\n    [\n        RSC\n    ],\n    [\n        NEXT_ROUTER_STATE_TREE\n    ],\n    [\n        NEXT_ROUTER_PREFETCH\n    ], \n];\n\n//# sourceMappingURL=app-router-headers.js.map","import { PageSignatureError } from \"./error\";\nimport { fromNodeHeaders } from \"./utils\";\nimport { NextFetchEvent } from \"./spec-extension/fetch-event\";\nimport { NextRequest } from \"./spec-extension/request\";\nimport { NextResponse } from \"./spec-extension/response\";\nimport { relativizeURL } from \"../../shared/lib/router/utils/relativize-url\";\nimport { waitUntilSymbol } from \"./spec-extension/fetch-event\";\nimport { NextURL } from \"./next-url\";\nimport { stripInternalSearchParams } from \"../internal-utils\";\nimport { normalizeRscPath } from \"../../shared/lib/router/utils/app-paths\";\nimport { FETCH_CACHE_HEADER, NEXT_ROUTER_PREFETCH, NEXT_ROUTER_STATE_TREE, RSC } from \"../../client/components/app-router-headers\";\nclass NextRequestHint extends NextRequest {\n    constructor(params){\n        super(params.input, params.init);\n        this.sourcePage = params.page;\n    }\n    get request() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n    respondWith() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n    waitUntil() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n}\nconst FLIGHT_PARAMETERS = [\n    [\n        RSC\n    ],\n    [\n        NEXT_ROUTER_STATE_TREE\n    ],\n    [\n        NEXT_ROUTER_PREFETCH\n    ],\n    [\n        FETCH_CACHE_HEADER\n    ], \n];\nexport async function adapter(params) {\n    // TODO-APP: use explicit marker for this\n    const isEdgeRendering = typeof self.__BUILD_MANIFEST !== \"undefined\";\n    params.request.url = normalizeRscPath(params.request.url, true);\n    const requestUrl = new NextURL(params.request.url, {\n        headers: params.request.headers,\n        nextConfig: params.request.nextConfig\n    });\n    // Ensure users only see page requests, never data requests.\n    const buildId = requestUrl.buildId;\n    requestUrl.buildId = \"\";\n    const isDataReq = params.request.headers[\"x-nextjs-data\"];\n    if (isDataReq && requestUrl.pathname === \"/index\") {\n        requestUrl.pathname = \"/\";\n    }\n    const requestHeaders = fromNodeHeaders(params.request.headers);\n    const flightHeaders = new Map();\n    // Parameters should only be stripped for middleware\n    if (!isEdgeRendering) {\n        for (const param of FLIGHT_PARAMETERS){\n            const key = param.toString().toLowerCase();\n            const value = requestHeaders.get(key);\n            if (value) {\n                flightHeaders.set(key, requestHeaders.get(key));\n                requestHeaders.delete(key);\n            }\n        }\n    }\n    // Strip internal query parameters off the request.\n    stripInternalSearchParams(requestUrl.searchParams, true);\n    const request = new NextRequestHint({\n        page: params.page,\n        input: String(requestUrl),\n        init: {\n            body: params.request.body,\n            geo: params.request.geo,\n            headers: requestHeaders,\n            ip: params.request.ip,\n            method: params.request.method,\n            nextConfig: params.request.nextConfig\n        }\n    });\n    /**\n   * This allows to identify the request as a data request. The user doesn't\n   * need to know about this property neither use it. We add it for testing\n   * purposes.\n   */ if (isDataReq) {\n        Object.defineProperty(request, \"__isData\", {\n            enumerable: false,\n            value: true\n        });\n    }\n    const event = new NextFetchEvent({\n        request,\n        page: params.page\n    });\n    let response = await params.handler(request, event);\n    // check if response is a Response object\n    if (response && !(response instanceof Response)) {\n        throw new TypeError(\"Expected an instance of Response to be returned\");\n    }\n    /**\n   * For rewrites we must always include the locale in the final pathname\n   * so we re-create the NextURL forcing it to include it when the it is\n   * an internal rewrite. Also we make sure the outgoing rewrite URL is\n   * a data URL if the request was a data request.\n   */ const rewrite = response == null ? void 0 : response.headers.get(\"x-middleware-rewrite\");\n    if (response && rewrite) {\n        const rewriteUrl = new NextURL(rewrite, {\n            forceLocale: true,\n            headers: params.request.headers,\n            nextConfig: params.request.nextConfig\n        });\n        if (!process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE) {\n            if (rewriteUrl.host === request.nextUrl.host) {\n                rewriteUrl.buildId = buildId || rewriteUrl.buildId;\n                response.headers.set(\"x-middleware-rewrite\", String(rewriteUrl));\n            }\n        }\n        /**\n     * When the request is a data request we must show if there was a rewrite\n     * with an internal header so the client knows which component to load\n     * from the data request.\n     */ const relativizedRewrite = relativizeURL(String(rewriteUrl), String(requestUrl));\n        if (isDataReq && // if the rewrite is external and external rewrite\n        // resolving config is enabled don't add this header\n        // so the upstream app can set it instead\n        !(process.env.__NEXT_EXTERNAL_MIDDLEWARE_REWRITE_RESOLVE && relativizedRewrite.match(/http(s)?:\\/\\//))) {\n            response.headers.set(\"x-nextjs-rewrite\", relativizedRewrite);\n        }\n    }\n    /**\n   * For redirects we will not include the locale in case when it is the\n   * default and we must also make sure the outgoing URL is a data one if\n   * the incoming request was a data request.\n   */ const redirect = response == null ? void 0 : response.headers.get(\"Location\");\n    if (response && redirect) {\n        const redirectURL = new NextURL(redirect, {\n            forceLocale: false,\n            headers: params.request.headers,\n            nextConfig: params.request.nextConfig\n        });\n        /**\n     * Responses created from redirects have immutable headers so we have\n     * to clone the response to be able to modify it.\n     */ response = new Response(response.body, response);\n        if (!process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE) {\n            if (redirectURL.host === request.nextUrl.host) {\n                redirectURL.buildId = buildId || redirectURL.buildId;\n                response.headers.set(\"Location\", String(redirectURL));\n            }\n        }\n        /**\n     * When the request is a data request we can't use the location header as\n     * it may end up with CORS error. Instead we map to an internal header so\n     * the client knows the destination.\n     */ if (isDataReq) {\n            response.headers.delete(\"Location\");\n            response.headers.set(\"x-nextjs-redirect\", relativizeURL(String(redirectURL), String(requestUrl)));\n        }\n    }\n    const finalResponse = response ? response : NextResponse.next();\n    // Flight headers are not overridable / removable so they are applied at the end.\n    const middlewareOverrideHeaders = finalResponse.headers.get(\"x-middleware-override-headers\");\n    const overwrittenHeaders = [];\n    if (middlewareOverrideHeaders) {\n        for (const [key, value] of flightHeaders){\n            finalResponse.headers.set(`x-middleware-request-${key}`, value);\n            overwrittenHeaders.push(key);\n        }\n        if (overwrittenHeaders.length > 0) {\n            finalResponse.headers.set(\"x-middleware-override-headers\", middlewareOverrideHeaders + \",\" + overwrittenHeaders.join(\",\"));\n        }\n    }\n    return {\n        response: finalResponse,\n        waitUntil: Promise.all(event[waitUntilSymbol])\n    };\n}\nfunction getUnsupportedModuleErrorMessage(module) {\n    // warning: if you change these messages, you must adjust how react-dev-overlay's middleware detects modules not found\n    return `The edge runtime does not support Node.js '${module}' module.\nLearn More: https://nextjs.org/docs/messages/node-module-in-edge-runtime`;\n}\nfunction __import_unsupported(moduleName) {\n    const proxy = new Proxy(function() {}, {\n        get (_obj, prop) {\n            if (prop === \"then\") {\n                return {};\n            }\n            throw new Error(getUnsupportedModuleErrorMessage(moduleName));\n        },\n        construct () {\n            throw new Error(getUnsupportedModuleErrorMessage(moduleName));\n        },\n        apply (_target, _this, args) {\n            if (typeof args[0] === \"function\") {\n                return args[0](proxy);\n            }\n            throw new Error(getUnsupportedModuleErrorMessage(moduleName));\n        }\n    });\n    return new Proxy({}, {\n        get: ()=>proxy\n    });\n}\nexport function enhanceGlobals() {\n    // The condition is true when the \"process\" module is provided\n    if (process !== global.process) {\n        // prefer local process but global.process has correct \"env\"\n        process.env = global.process.env;\n        global.process = process;\n    }\n    // to allow building code that import but does not use node.js modules,\n    // webpack will expect this function to exist in global scope\n    Object.defineProperty(globalThis, \"__import_unsupported\", {\n        value: __import_unsupported,\n        enumerable: false,\n        configurable: false\n    });\n    if (\"_ENTRIES\" in globalThis && _ENTRIES.middleware_instrumentation && _ENTRIES.middleware_instrumentation.register) {\n        try {\n            _ENTRIES.middleware_instrumentation.register();\n        } catch (err) {\n            err.message = `An error occurred while loading instrumentation hook: ${err.message}`;\n            throw err;\n        }\n    }\n}\n\n//# sourceMappingURL=adapter.js.map"],"names":["next_dist_esm_server_web_adapter__WEBPACK_IMPORTED_MODULE_0__","g","mod","__webpack_require__","handler","middleware","default","__WEBPACK_DEFAULT_EXPORT__","opts","V","page","OpenAIModelID","GPT_3_5","GPT_4","OpenAIModels","id","name","maxLength","tokenLimit","config","runtime","req","key","json","response","fetch","OPENAI_API_HOST","headers","Authorization","process","env","OPENAI_API_KEY","OPENAI_ORGANIZATION","status","Response","body","console","error","text","models","data","map","value","Object","entries","model","filter","Boolean","JSON","stringify","DEFAULT_SYSTEM_PROMPT","__defProp","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__hasOwnProp","prototype","hasOwnProperty","__copyProps","to","from","except","desc","call","get","enumerable","__toCommonJS","src_exports","serialize","c","attrs","path","expires","toUTCString","maxAge","domain","secure","httpOnly","sameSite","encodeURIComponent","join","parseCookieString","cookie","Map","pair","split","splitAt","indexOf","slice","set","decodeURIComponent","parseSetCookieString","setCookie","attributes","httponly","maxage","samesite","fromEntries","value2","toLowerCase","Date","Number","parseSameSite","compact","t","newT","__export","target","all","RequestCookies","ResponseCookies","module","exports","SAME_SITE","string","includes","constructor","requestHeaders","_parsed","_headers","header","parsed","Symbol","iterator","size","args","getAll","_a","Array","length","_","n","has","delete","names","result","isArray","clear","keys","for","toString","values","v","responseHeaders","cookieStrings","splitCookiesString","cookieString","normalizeCookie","replace","bag","serialized","append","now","cookiesString","start","ch","lastComma","nextStart","cookiesSeparatorFound","cookiesStrings","pos","skipWhitespace","test","charAt","push","substring","PageSignatureError","Error","RemovedPageError","RemovedUAError","fromNodeHeaders","object","Headers","undefined","toNodeHeaders","validateURL","url","String","URL","cause","responseSymbol","passThroughSymbol","waitUntilSymbol","FetchEvent","_request","respondWith","Promise","resolve","passThroughOnException","waitUntil","promise","NextFetchEvent","params","request","sourcePage","detectDomainLocale","domainItems","hostname","detectedLocale","domainItem","item","ref","ref1","domainHostname","defaultLocale","locales","some","locale","removeTrailingSlash","route","parsePath","hashIndex","queryIndex","hasQuery","pathname","query","hash","addPathPrefix","prefix","startsWith","addPathSuffix","suffix","pathHasPrefix","addLocale","ignorePrefix","formatNextPathnameInfo","info","buildId","trailingSlash","basePath","endsWith","getHostname","host","normalizeLocalePath","pathnameParts","splice","removePathPrefix","withoutPrefix","getNextPathnameInfo","options","_nextConfig","i18n","nextConfig","parseData","paths","pathLocale","REGEX_LOCALHOST_HOSTNAME","parseURL","base","Internal","NextURL","input","baseOrOpts","analyzeUrl","ref2","ref3","ref4","pathnameInfo","domainLocale","domains","formatPathname","forceLocale","formatSearch","search","ref5","searchParams","port","protocol","href","origin","password","username","toJSON","clone","INTERNALS","NextRequest","Request","init","cookies","geo","ip","nextUrl","bodyUsed","cache","credentials","destination","integrity","keepalive","method","mode","redirect","referrer","referrerPolicy","signal","ua","response_INTERNALS","REDIRECTS","Set","handleMiddlewareField","NextResponse","ok","redirected","statusText","type","initObj","rewrite","next","relativizeURL","baseURL","relative","INTERNAL_QUERY_NAMES","EXTENDED_INTERNAL_QUERY_NAMES","stripInternalSearchParams","extended","normalizeRscPath","enabled","NextRequestHint","adapter_FLIGHT_PARAMETERS","adapter","isEdgeRendering","self","__BUILD_MANIFEST","requestUrl","isDataReq","flightHeaders","param","event","rewriteUrl","relativizedRewrite","redirectURL","finalResponse","middlewareOverrideHeaders","overwrittenHeaders","getUnsupportedModuleErrorMessage","__import_unsupported","moduleName","proxy","Proxy","_obj","prop","construct","apply","_target","_this","enhanceGlobals","globalThis","configurable","_ENTRIES","middleware_instrumentation","register","err","message"],"sourceRoot":""}